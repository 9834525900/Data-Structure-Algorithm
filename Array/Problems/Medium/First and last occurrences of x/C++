class Solution
{
    public:
    int FirstOccurance(int arr[], int n, int x){
        int s=0;
        int e=n-1;
        int mid=s+(e-s)/2;
        int ans= -1;
        while(s<=e){
            if(x > arr[mid]){
                s=mid+1;
            }
            else{
                if(arr[mid]==x){
                    ans=mid;
                }
                e=mid-1;
            }
            mid=s+(e-s)/2;
        }
        return ans;
    }
    
    int LastOccurance(int arr[], int n, int x){
        int s=0;
        int e=n-1;
        int mid=s+(e-s)/2;
        int ans=-1;
        while(s<=e){
            if(x<arr[mid]){
                e=mid-1;
            }
            else{
                if(arr[mid]==x){
                    ans=mid;
                }
                s=mid+1;
            }
            mid=s+(e-s)/2;
        }
        return ans;
    }
    
    vector<int> find(int arr[], int n , int x )
    {
        // code here
        int First= FirstOccurance(arr, n, x);
        int Second= LastOccurance(arr, n, x);
        vector<int> ans;
        ans.push_back(First);
        ans.push_back(Second);
        return ans;
        
        
    }
};
