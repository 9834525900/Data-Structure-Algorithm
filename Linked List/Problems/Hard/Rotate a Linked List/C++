class Solution{ 
public:
    Node* FindMid(Node* &head){
        Node* slow= head;
        Node* fast= head;
        while(fast!=NULL && fast->next!=NULL){
            slow=slow->next;
            fast=fast->next->next;
        }
        return slow;
    }
    
    Node* Reverse(Node* &temp){
        Node* prev=NULL;
        Node* curr=temp;
        while(curr!=NULL){
            Node* ptr=curr->next;
            curr->next=prev;
            prev=curr;
            curr=ptr;
        }
        temp=prev;
        return temp;
    }

    void reorderList(Node* &head) {
        // Your code here
        if(head==NULL || head->next==NULL){
            return;
        }
        Node* mid= FindMid(head);
        Node* temp=mid->next;
        if(temp==NULL){
            return;
        }
        mid->next=NULL;
        Node* ptr1=head;
        Node* ptr2=Reverse(temp);
        
        Node* temp1=ptr1->next;
        Node* temp2=ptr2->next;
        
        while(temp1!=NULL && temp2!=NULL){
            temp1=ptr1->next;
            ptr1->next=ptr2;
            temp2=ptr2->next;
            ptr2->next=temp1;
            ptr1=temp1;
            temp1=ptr1->next;
            ptr2=temp2;
            temp2=ptr2->next;
        }
        ptr1->next=ptr2;
        ptr2->next=temp1;
        
    }
};
